import DashboardLayout from "@/components/DashboardLayout";
import { Descriptions, Space, Table, Tag } from "antd";
import Head from "next/head";
import React from "react";
import Styles from "styles/pages/hire.module.scss";

export default function Post({ postId }) {
  const columns = [
    {
      title: "Name",
      dataIndex: "name",
      key: "name",
      render: (text) => <a>{text}</a>,
    },
    {
      title: "Email",
      dataIndex: "age",
      key: "age",
    },
    {
      title: "Address",
      dataIndex: "address",
      key: "address",
    },
    {
      title: "Tags",
      key: "tags",
      dataIndex: "tags",
      render: (_, { tags }) => (
        <>
          {tags.map((tag) => {
            let color = tag.length > 5 ? "geekblue" : "green";
            if (tag === "loser") {
              color = "volcano";
            }
            return (
              <Tag color={color} key={tag}>
                {tag.toUpperCase()}
              </Tag>
            );
          })}
        </>
      ),
    },
  ];

  const data = [
    {
      key: "1",
      name: "John Brown",
      age: 32,
      address: "New York No. 1 Lake Park",
      tags: ["nice", "developer"],
    },
    {
      key: "2",
      name: "Jim Green",
      age: 42,
      address: "London No. 1 Lake Park",
      tags: ["loser"],
    },
    {
      key: "3",
      name: "Joe Black",
      age: 32,
      address: "Sydney No. 1 Lake Park",
      tags: ["cool", "teacher"],
    },
  ];

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DashboardLayout title="Dashboard">
        <div className={Styles.container}>
          <Descriptions>
            <Descriptions.Item label="Job Title">Zhou Maomao</Descriptions.Item>
            <Descriptions.Item label="Department">
              <Tag color="blue">React</Tag>
            </Descriptions.Item>
            <Space />
            <Descriptions.Item label="Job Description">
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
            </Descriptions.Item>
          </Descriptions>
          {postId}
          <Table columns={columns} dataSource={data} />
        </div>
      </DashboardLayout>
    </div>
  );
}
// retrieve the post id from the url
export async function getServerSideProps(context) {
  const { postId } = context.query;
  return {
    props: {
      postId,
    },
  };
}
